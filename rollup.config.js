import typescript from '@rollup/plugin-typescript'
import { nodeResolve } from '@rollup/plugin-node-resolve'
import commonjs from '@rollup/plugin-commonjs'
import alias from '@rollup/plugin-alias'
import json from '@rollup/plugin-json'

const isProd = (process.env.BUILD === 'production')

const banner =
  `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`

export default {
  input: 'main.ts',
  output: {
    dir: './dist',
    sourcemap: 'inline',
    sourcemapExcludeSources: isProd,
    format: 'cjs',
    exports: 'default',
    banner
  },
  external: ['obsidian', '@codemirror/state', '@codemirror/view', '@codemirror/rangeset'],
  plugins: [
    typescript(),

    // force kuromoji to its browser build
    alias({
      entries: [
        { find: /^kuromoji$/, replacement: 'kuromoji/build/kuromoji.js' }
      ]
    }),

    json(),

    // resolve deps for the browser, not Node
    nodeResolve({
      browser: true,
      preferBuiltins: false
    }),

    // CJS interop; safe default that works well with UMD
    commonjs({
      defaultIsModuleExports: true
    })
  ]
}
